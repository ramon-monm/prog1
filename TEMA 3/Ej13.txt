#include <iostream>
#include <cmath>

using namespace std;

bool es_primo(int n);
unsigned mcd(unsigned a, unsigned b);
unsigned exponente(unsigned x, unsigned base);
unsigned sig_primo(unsigned n);
unsigned mcm(unsigned x, unsigned y);

int main() {
  unsigned x,y;
  cout<<"Escribe dos números "; cin>>x>>y;
  cout<<"El mcd de "<<x<<" y "<<y<<" es "<<mcd(x,y)<<endl;
  unsigned nume, deno, max; 
  cout<<"Fracción a simplificar "; cin>>nume>>deno;
  max=mcd(nume,deno);
  cout<<"La fracción simplificada es "<<nume/max<<"/"<<deno/max<<endl;
  return 0;
}
unsigned mayor_exp(unsigned a, unsigned b){
  unsigned moyor=b;
  if(a>b){mayor=a;}
  return mayor;
}
unsigned mcm(unsigned a, unsigned b){
  unsigned minimo=1;
  
  return minimo;
}


bool es_primo(int n){
  bool es = true; unsigned div=2;
  while(es and div<=n/2){
    es=n%div!=0;
    ++div;
  }
  return es;
}
unsigned menor_exp(unsigned a, unsigned b){
  unsigned menor=b;
  if(a<b){menor=a;}
  return menor;
}

unsigned mcd(unsigned a, unsigned b){
  unsigned primo=2,maxcd=1;
  while( (primo<=sqrt(a) or es_primo(a)) and (primo<=sqrt(b) or es_primo(b))){
    unsigned exp_a, exp_b;
    exp_a=exponente(a,primo);
    exp_b=exponente(b,primo);
    unsigned menor=menor_exp(exp_a,exp_b);
    maxcd = maxcd * pow(primo,menor);
    primo = sig_primo(primo);
  }
  return maxcd;  
}
unsigned exponente(unsigned x, unsigned base){
  unsigned nveces = 0;
  while(x%base == 0){
    x=x/base;
    ++nveces;
  } 
  return nveces;
}

unsigned sig_primo(unsigned n){
  unsigned num=n+1;
  while(!es_primo(num)){
    ++num;
  }
  return num;
}